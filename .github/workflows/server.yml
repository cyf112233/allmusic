name: Secure Daily Check

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'  # 添加缓存加速依赖安装

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub requests
          pip list  # 验证安装的包

      - name: Create secure script
        run: |
          cat << 'EOF' > check_workflow.py
          import os
          import sys
          from github import Github

          def main():
              try:
                  token = os.getenv('GITHUB_TOKEN')
                  if not token:
                      raise ValueError("GITHUB_TOKEN environment variable not set")
                  
                  print("Initializing GitHub client...")
                  g = Github(token)
                  
                  print("Getting repository...")
                  repo = g.get_repo('Coloryr/AllMusic_Server')
                  
                  print("Getting workflow runs...")
                  workflows = repo.get_workflow_runs(status='success')
                  
                  print(f"Found {workflows.totalCount} successful workflows")
                  for workflow in workflows:
                      print(f"Workflow ID: {workflow.id}, SHA: {workflow.head_sha}")
                  
                  return 0
              except Exception as e:
                  print(f"Error: {str(e)}", file=sys.stderr)
                  return 1

          if __name__ == "__main__":
              sys.exit(main())
          EOF

      - name: Run secure check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Running script..."
          python check_workflow.py
          echo "Script completed with exit code $?"
